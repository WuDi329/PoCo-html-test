{"version":3,"file":"webm-worker-155cb4ba.js","sources":["../src/worker/webm-worker.ts"],"sourcesContent":["// metadata flags\nconst video_flag = 0b01;\nconst audio_flag = 0b10;\n\n// header flags\nconst video_type_flag  = 0b001;\nconst key_flag         = 0b010;\nconst new_cluster_flag = 0b100;\n\nconst max_timestamp_mismatch_warnings = 10;\n\nfunction aterror(e: ErrorEvent) {\n    console.error(e);\n    self.postMessage({\n        type: 'error',\n        detail: e.message\n    });\n}\n\n//这里metadata给了any属性，后续需要改\nlet metadata: any;\n//这里options给了any属性，后续需要改\nlet options: any;\nlet webm_muxer: Worker;\nlet first_video_timestamp: number|null = null;\nlet first_audio_timestamp: number|null = null; // using timestamps on encoded chunks\nlet next_audio_timestamp = 0; // using durations on encoded chunks\nlet last_timestamp = -1;\nlet last_video_in_timestamp = 0;\nlet last_video_out_timestamp = 0;\nlet last_audio_in_timestamp = 0;\nlet last_audio_out_timestamp = 0;\nlet audio_msgs_since_last_cluster = 0;\n//这里queued_video给了any属性，后续需要改\nlet queued_video: any[] = [];\n//这里queued_audio给了any属性，后续需要改\nlet queued_audio: any[] = [];\nlet num_timestamp_mismatch_warnings = 0;\n\n//这里给了data any属性\n//为了解决module问题，这里加了export\nexport function send_data(data: any) {\n    webm_muxer.postMessage({\n        type: 'stream-data',\n        data\n    }, [data]);\n}\n\n//这里给了msg any属性\nfunction send_msg(msg: any) {\n    if (msg.timestamp <= last_timestamp)  {\n        if (msg.timestamp < last_timestamp) {\n            console.warn(`${msg.type} timestamp ${msg.timestamp} is older than last timestamp ${last_timestamp}`);\n        }\n        msg.timestamp = last_timestamp + 1;\n    }\n    last_timestamp = msg.timestamp;\n\n    const header = new ArrayBuffer(1);\n    new DataView(header).setUint8(0,\n        (msg.type === 'video-data' ? video_type_flag : 0) |\n        (msg.is_key ? key_flag : 0) |\n        (msg.new_cluster ? new_cluster_flag : 0));\n        // true);\n\n\n    const timestamp = new ArrayBuffer(8);\n    new DataView(timestamp).setBigUint64(0, BigInt(msg.timestamp), true);\n\n    const duration = new ArrayBuffer(8);\n    new DataView(duration).setBigUint64(0, BigInt(msg.duration || 0), true);\n\n    send_data(header);\n    send_data(timestamp);\n    send_data(duration);\n    send_data(msg.data);\n}\n\n//这里给了vmsg any属性\nfunction get_video_ts(vmsg: any) {\n    const vtimestamp = last_video_out_timestamp + (vmsg.timestamp - last_video_in_timestamp);\n    if (vtimestamp <= last_timestamp) {\n        if (vtimestamp < last_timestamp) {\n            console.warn(`video timestamp ${vtimestamp} is older than last timestamp ${last_timestamp}`);\n        }\n        return last_timestamp + 1;\n    }\n    return vtimestamp;\n}\n\n//这里给了vmsg any属性\nfunction set_video_ts(vmsg: any, vtimestamp: number) {\n    last_video_in_timestamp = vmsg.timestamp;\n    vmsg.timestamp = vtimestamp;\n    last_video_out_timestamp = vtimestamp;\n    return vmsg;\n}\n\n//这里给了amsg any属性\nfunction get_audio_ts(amsg: any) {\n    const atimestamp = last_audio_out_timestamp + (amsg.timestamp - last_audio_in_timestamp);\n    if (atimestamp <= last_timestamp) {\n        if (atimestamp < last_timestamp) {\n            console.warn(`audio timestamp ${atimestamp} is older than last timestamp ${last_timestamp}`);\n        }\n        return last_timestamp + 1;\n    }\n    return atimestamp;\n}\n\n//这里给了amsg any属性\nfunction set_audio_ts(amsg: any, atimestamp: number) {\n    last_audio_in_timestamp = amsg.timestamp;\n    amsg.timestamp = atimestamp;\n    last_audio_out_timestamp = atimestamp;\n    return amsg;\n}\n\n//这里给了opts any属性\nfunction send_msgs(opts: any) {\n    if (!metadata.video) {\n        while (queued_audio.length > 0) {\n            send_msg(queued_audio.shift());\n        }\n        return;\n    }\n\n    if (!metadata.audio) {\n        while (queued_video.length > 0) {\n            send_msg(queued_video.shift());\n        }\n        return;\n    }\n\n    while ((queued_video.length > 0) && (queued_audio.length > 0)) {\n        const vtimestamp = get_video_ts(queued_video[0]);\n        const atimestamp = get_audio_ts(queued_audio[0]);\n\n        if (vtimestamp < atimestamp) {\n            send_msg(set_video_ts(queued_video.shift(), vtimestamp));\n        } else {\n            send_msg(set_audio_ts(queued_audio.shift(), atimestamp));\n        }\n    }\n\n    while (queued_video.length > opts.video_queue_limit) {\n        const msg = queued_video.shift();\n        const vtimestamp = get_video_ts(msg);\n        send_msg(set_video_ts(msg, vtimestamp));\n    }\n\n    while (queued_audio.length > opts.audio_queue_limit) {\n        const msg = queued_audio.shift();\n        if ((queued_audio.length === opts.audio_queue_limit) &&\n            (++audio_msgs_since_last_cluster > opts.audio_queue_limit)) {\n            msg.new_cluster = true;\n            audio_msgs_since_last_cluster = 0;\n        }\n        const atimestamp = get_audio_ts(msg);\n        send_msg(set_audio_ts(msg, atimestamp));\n    }\n}\n\n//这里给了metadata any属性\nfunction send_metadata(metadata: any) {\n    const max_cluster_duration = new ArrayBuffer(8);\n    new DataView(max_cluster_duration).setBigUint64(0, metadata.max_cluster_duration || BigInt(0), true);;\n    send_data(max_cluster_duration);\n\n    const flags = new ArrayBuffer(1);\n    new DataView(flags).setUint8(0,\n        (metadata.video ? video_flag : 0) |\n        (metadata.audio ? audio_flag : 0));\n        // true);\n    send_data(flags);\n\n    if (metadata.video) {\n        const width = new ArrayBuffer(4);\n        new DataView(width).setInt32(0, metadata.video.width, true);\n        send_data(width);\n\n        const height = new ArrayBuffer(4);\n        new DataView(height).setInt32(0, metadata.video.height, true);\n        send_data(height);\n\n        const frame_rate = new ArrayBuffer(4);\n        new DataView(frame_rate).setFloat32(0, metadata.video.frame_rate || 0, true);\n        send_data(frame_rate);\n\n        send_data(new TextEncoder().encode(metadata.video.codec_id).buffer);\n\n        if (metadata.video.codec_id === 'V_VP9') {\n            // See https://www.webmproject.org/docs/container/#vp9-codec-feature-metadata-codecprivate\n            const codec_private = new ArrayBuffer(12);\n            const view = new DataView(codec_private);\n            view.setUint8(0, 1); // profile\n            view.setUint8(1, 1); // length\n            view.setUint8(2, metadata.video.profile || 0);\n            view.setUint8(3, 2); // level\n            view.setUint8(4, 1); // length\n            view.setUint8(5, metadata.video.level || 10);\n            view.setUint8(6, 3); // bit depth\n            view.setUint8(7, 1); // length\n            view.setUint8(8, metadata.video.bit_depth || 8);\n            view.setUint8(9, 4); // chroma subsampling\n            view.setUint8(10, 1); // length\n            view.setUint8(11, metadata.video.chroma_subsampling || 1);\n            send_data(codec_private);\n        } else if (metadata.video.codec_id === 'V_AV1') {\n            // See https://github.com/ietf-wg-cellar/matroska-specification/blob/master/codec/av1.md#codecprivate-1\n            const codec_private = new ArrayBuffer(4);\n            const view = new DataView(codec_private);\n            view.setUint8(0, 0b10000001); // marker and version\n            view.setUint8(1, metadata.video.profile << 5 |\n                             metadata.video.level);\n            view.setUint8(2, metadata.video.tier << 7 |\n                             metadata.video.high_bitdepth << 6 |\n                             metadata.video.twelve_bit << 5 |\n                             metadata.video.monochrome << 4 |\n                             metadata.video.chroma_subsampling_x << 3 |\n                             metadata.video.chroma_subsampling_y << 2 |\n                             metadata.video.chroma_sample_position);\n            // leave byte 3 (initial_presentation_delay_*) as 0\n            send_data(codec_private);\n        } else {\n            send_data(new ArrayBuffer(0));\n        }\n\n        const seek_pre_roll = new ArrayBuffer(8);\n        new DataView(seek_pre_roll).setBigUint64(0, metadata.video.seek_pre_roll || BigInt(0), true);\n        send_data(seek_pre_roll);\n    }\n\n    if (metadata.audio) {\n        const sample_rate = new ArrayBuffer(4);\n        new DataView(sample_rate).setInt32(0, metadata.audio.sample_rate, true);\n        send_data(sample_rate);\n\n        const channels = new ArrayBuffer(4);\n        new DataView(channels).setInt32(0, metadata.audio.channels, true);\n        send_data(channels);\n\n        const bit_depth = new ArrayBuffer(4);\n        new DataView(bit_depth).setInt32(0, metadata.audio.bit_depth || 0, true);\n        send_data(bit_depth);\n\n        send_data(new TextEncoder().encode(metadata.audio.codec_id).buffer);\n\n        if (metadata.audio.codec_id === 'A_OPUS') {\n            // Adapted from https://github.com/kbumsik/opus-media-recorder/blob/master/src/ContainerInterface.cpp#L27\n            // See also https://datatracker.ietf.org/doc/html/rfc7845#section-5.1\n\n            const codec_private = new ArrayBuffer(19);\n            new TextEncoder().encodeInto('OpusHead', new Uint8Array(codec_private)); // magic\n\n            const view = new DataView(codec_private);\n            view.setUint8(8, 1); // version\n            view.setUint8(9, metadata.audio.channels); // channel count\n            view.setUint16(10, metadata.audio.pre_skip || 0, true); // pre-skip\n            view.setUint32(12, metadata.audio.sample_rate, true); // sample rate\n            view.setUint16(16, metadata.audio.output_gain || 0, true); // output gain\n            // view.setUint8(18, 0, true); // mapping family\n            view.setUint8(18, 0); // mapping family\n\n            send_data(codec_private);\n        } else {\n            send_data(new ArrayBuffer(0));\n        }\n\n        const seek_pre_roll = new ArrayBuffer(8);\n        new DataView(seek_pre_roll).setBigUint64(0,\n                metadata.audio.seek_pre_roll || BigInt(metadata.audio.codec_id === 'A_OPUS' ? 80000 : 0),\n                true);\n        send_data(seek_pre_roll);\n    }\n\n    self.postMessage({type: 'start-stream'});\n}\n\nonmessage = function (e) {\n    const msg = e.data;\n    switch (msg.type) {\n        case 'video-data':\n            if (metadata.video) {\n                if (first_video_timestamp === null) {\n                    first_video_timestamp = msg.timestamp;\n                }\n                if (first_video_timestamp !== null)\n                msg.timestamp -= first_video_timestamp;\n                queued_video.push(msg);\n                send_msgs(options);\n            }\n            break;\n\n        case 'audio-data':\n            if (metadata.audio) {\n                if (first_audio_timestamp === null) {\n                    first_audio_timestamp = msg.timestamp;\n                }\n                if (first_audio_timestamp !== null){\n                const timestamp = msg.timestamp - first_audio_timestamp;\n                \n                if (!msg.duration && (next_audio_timestamp >= 0)) {\n                    console.warn('no audio duration');\n                    next_audio_timestamp = -1;\n                }\n                if (next_audio_timestamp >= 0) {\n                    msg.timestamp = next_audio_timestamp;\n                    next_audio_timestamp += msg.duration;\n                    if ((msg.timestamp !== timestamp) &&\n                        (++num_timestamp_mismatch_warnings <= max_timestamp_mismatch_warnings)) {\n                        console.warn(`timestamp mismatch: timestamp=${timestamp} durations=${msg.timestamp}`);\n                        if (num_timestamp_mismatch_warnings === max_timestamp_mismatch_warnings) {\n                            console.warn('supressing further timestamp mismatch warnings');\n                        }\n                    }\n                } else {\n                    msg.timestamp = timestamp;\n                }\n                queued_audio.push(msg);\n                send_msgs(options);\n            }\n            }\n            break;\n\n            //主线程发送start时，这里被触发\n        case 'start': {\n            metadata = msg.webm_metadata;\n            options = {\n                video_queue_limit: Infinity,\n                audio_queue_limit: Infinity,\n                use_audio_timestamps: false,\n                ...msg.webm_options\n            };\n            delete msg.webm_metadata;\n            delete msg.webm_options;\n\n            if (options.use_audio_timestamps) {\n                next_audio_timestamp = -1;\n            }\n\n            //new webm-muxer.js\n            webm_muxer = new Worker(new URL(\"../external-js/webm-muxer.js\", import.meta.url), {\n                type: \"module\"\n            });\n\n            webm_muxer.onerror = aterror;\n\n            //listen to webm-muxer.js\n            webm_muxer.onmessage = function (e) {\n                const msg2 = e.data;\n                switch (msg2.type) {\n                    //main thread msg:type=start\n                    case 'ready':\n                        console.log('webm-worker: cast ready is triggered')\n                        webm_muxer.postMessage(msg);\n                        break;\n\n                    //send data to webm-muxer msg:stream-data\n                    case 'start-stream':\n                        console.log('webm-worker: cast start-stream is triggered')\n                        send_metadata(metadata);\n                        break;\n\n                    //forward the message about exit\n                    case 'exit':\n                        console.log('webm-worker: cast terminate is triggered')\n                        webm_muxer.terminate();\n                        self.postMessage(msg2);\n                        break;\n\n                    ///forward the message about muxed-data\n                    case 'muxed-data':\n                        console.log('webm-worker: get muxed data from webm-muxer')\n                        //@ts-ignore\n                        self.postMessage(msg2, [msg2.data]);\n                        break;\n\n                    ///forward the message about stats\n                    case 'stats':\n                        console.log('webm-worker: case stat is triggered')\n                        self.postMessage(msg2);\n                        break;\n                    //?\n                    default:\n                        self.postMessage(msg2, msg2.transfer);\n                        break;\n                }\n            };\n\n            break;\n        }\n\n        case 'end': {\n            if (webm_muxer) {\n                if (queued_audio.length > 0) {\n                    queued_audio[0].new_cluster = true;\n                }\n                send_msgs({ video_queue_limit: 0, audio_queue_limit: 0 });\n                webm_muxer.postMessage(msg);\n            }\n            break;\n        }\n    }\n};\n"],"names":[],"mappings":"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"}